name: CD

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  publish:
    name: Publish Crate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Publish
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: cargo publish --token "${CRATES_IO_TOKEN}"

  build:
    name: Build Binaries
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: i686-pc-windows-msvc
            archive: zip

          - os: ubuntu-latest
            target: i686-unknown-linux-gnu
            archive: tar.gz

          - os: macos-latest
            target: x86_64-apple-darwin
            archive: tar.gz

          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive: zip

          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive: tar.gz

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          profile: minimal
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
          use-cross: ${{ matrix.os == 'ubuntu-latest' }}

      - name: Prepare Variables
        id: variables
        shell: bash
        env:
          EXTENSION: ${{ matrix.archive }}
          TARGET: ${{ matrix.target }}
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          VERSION=${VERSION//\//-}
          echo ::set-output name=ARTIFACT_NAME::git-hooks-${VERSION}-${TARGET}.${EXTENSION}

      - name: Prepare Artifact
        shell: bash
        env:
          ARTIFACT_NAME: ${{ steps.variables.outputs.ARTIFACT_NAME }}
          OS: ${{ matrix.os }}
          TARGET: ${{ matrix.target }}
        run: |
          pushd "target/${TARGET}/release"
          if [ "${OS}" = "windows-latest" ]; then
            strip git-hooks.exe
            7z a "../../../${ARTIFACT_NAME}" git-hooks.exe
          else
            strip git-hooks
            tar czvf "../../../${ARTIFACT_NAME}" git-hooks
          fi
          popd

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.variables.outputs.ARTIFACT_NAME }}
          path: ${{ steps.variables.outputs.ARTIFACT_NAME }}

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download Artifacts
        uses: actions/download-artifact@v2

      - name: Generate Checksums
        run: for file in git-hooks-*/git-hooks-*; do sha256sum -b "${file}" > "${file}.sha256"; done

      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: git-hooks-*/git-hooks-*
